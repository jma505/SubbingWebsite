/*
 * WARNING: DO NOT EDIT THIS FILE. This is a generated file that is synchronized
 * by MyEclipse Hibernate tool integration.
 *
 * Created Fri Sep 09 17:45:06 EDT 2005 by MyEclipse Hibernate Tool.
 */
package org.jmanderson.subbing.hibernate;

import java.io.Serializable;

/**
 * A class that represents a row in the phone table. 
 * You can customize the behavior of this class by editing the class, {@link Phone()}.
 * WARNING: DO NOT EDIT THIS FILE. This is a generated file that is synchronized
 * by MyEclipse Hibernate tool integration.
 */
public abstract class AbstractPhone 
    implements Serializable
{
    /** The cached hash code value for this instance.  Settting to 0 triggers re-calculation. */
    private int hashValue = 0;

    /** The composite primary key value. */
    private java.lang.Integer id;

    /** The value of the organists association. */
    private Organists organists;

    /** The value of the simple areacode property. */
    private java.lang.Integer areacode;

    /** The value of the simple phone property. */
    private java.lang.Integer phone;

    /** The value of the simple extension property. */
    private java.lang.Integer extension;

    /** The value of the simple type property. */
    private java.lang.String type;

    /**
     * Simple constructor of AbstractPhone instances.
     */
    public AbstractPhone()
    {
    }

    /**
     * Constructor of AbstractPhone instances given a simple primary key.
     * @param id
     */
    public AbstractPhone(java.lang.Integer id)
    {
        this.setId(id);
    }

    /**
     * Return the simple primary key value that identifies this object.
     * @return java.lang.Integer
     */
    public java.lang.Integer getId()
    {
        return id;
    }

    /**
     * Set the simple primary key value that identifies this object.
     * @param id
     */
    public void setId(java.lang.Integer id)
    {
        this.hashValue = 0;
        this.id = id;
    }

    /**
     * Return the value of the username column.
     * @return Organists
     */
    public Organists getOrganists()
    {
        return this.organists;
    }

    /**
     * Set the value of the username column.
     * @param organists
     */
    public void setOrganists(Organists organists)
    {
        this.organists = organists;
    }

    /**
     * Return the value of the areacode column.
     * @return java.lang.Integer
     */
    public java.lang.Integer getAreacode()
    {
        return this.areacode;
    }

    /**
     * Set the value of the areacode column.
     * @param areacode
     */
    public void setAreacode(java.lang.Integer areacode)
    {
        this.areacode = areacode;
    }

    /**
     * Return the value of the phone column.
     * @return java.lang.Integer
     */
    public java.lang.Integer getPhone()
    {
        return this.phone;
    }

    /**
     * Set the value of the phone column.
     * @param phone
     */
    public void setPhone(java.lang.Integer phone)
    {
        this.phone = phone;
    }

    /**
     * Return the value of the extension column.
     * @return java.lang.Integer
     */
    public java.lang.Integer getExtension()
    {
        return this.extension;
    }

    /**
     * Set the value of the extension column.
     * @param extension
     */
    public void setExtension(java.lang.Integer extension)
    {
        this.extension = extension;
    }

    /**
     * Return the value of the type column.
     * @return java.lang.String
     */
    public java.lang.String getType()
    {
        return this.type;
    }

    /**
     * Set the value of the type column.
     * @param type
     */
    public void setType(java.lang.String type)
    {
        this.type = type;
    }

    /**
     * Implementation of the equals comparison on the basis of equality of the primary key values.
     * @param rhs
     * @return boolean
     */
    public boolean equals(Object rhs)
    {
        if (rhs == null)
            return false;
        if (! (rhs instanceof Phone))
            return false;
        Phone that = (Phone) rhs;
        if (this.getId() == null || that.getId() == null)
            return false;
        return (this.getId().equals(that.getId()));
    }

    /**
     * Implementation of the hashCode method conforming to the Bloch pattern with
     * the exception of array properties (these are very unlikely primary key types).
     * @return int
     */
    public int hashCode()
    {
        if (this.hashValue == 0)
        {
            int result = 17;
            int idValue = this.getId() == null ? 0 : this.getId().hashCode();
            result = result * 37 + idValue;
            this.hashValue = result;
        }
        return this.hashValue;
    }
}
